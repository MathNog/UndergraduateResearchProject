library(forecast)
library(ggplot2)
library(tseries)
library(FitARMA)
#Setar diretório correto
setwd("C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/AirFranceKLM_AF_PA")
#Leitura dos dados -> preços BOEING
arquivo=read.csv(file="AF_PA_2000a2020.csv")
arquivo_nonull=na.omit(arquivo)
#Selecionando apenas o AdjClose -> podemos ignorar os outros
AdjClose=arquivo[c(6)]
length(AdjClose)
head(AdjClose)
tail(AdjClose)
#Selecionando apenas o AdjClose -> podemos ignorar os outros
AdjClose=arquivo_nonull[c(6)]
length(AdjClose)
head(AdjClose)
tail(AdjClose)
#Passando os dados do data frame para um vetor
AdjClose_vec=as.vector(t(AdjClose))
class(AdjClose_vec)
AdjClose_vec=as.numeric(t(AdjClose))
class(AdjClose_vec)
AdjClose_vec
AdjClose_vec=na.omit(AdjClose_vec)
AdjClose_vec
class(AdjClose_vec)
#Vizualização dos dados originais
plot(AdjClose_vec,main="AdjClose AirFrance-KLM 2000-2020",type="l")
#Passando os dados do data frame para um vetor
AdjClose_vec=as.vector(t(AdjClose))
AdjClose_vec=as.numeric(t(AdjClose))
#Vizualização dos dados originais
plot(AdjClose_vec,main="AdjClose AirFrance-KLM 2000-2020",type="l")
AdjClose_vec=na.omit(AdjClose_vec)
#Vizualização dos dados originais
plot(AdjClose_vec,main="AdjClose AirFrance-KLM 2000-2020",type="l")
#Para obter o log-return a partir dos preços
#Temos que, o retorno rt = ln(Pt)-ln(Pt-1), ou seja, a diferença do log do preço atual e do log do preço em t-1.
#A função diff retorna justamente AdjCloseBA_vec[t]-AdjCloseBA_vec[t-1]
logret=diff(log(AdjClose_vec),lag=1)
#Para vizualizar o retorno, não o preço
plot(logret,main="Log-return AdjClose AirFrance-KLM 2000-2020",type="l")
#Vizualização dos dados originais
plot(AdjClose_vec,main="AdjClose AirFrance-KLM 2000-2020",type="l")
#Colocando BA_logret em uma variável do tipo TimeSeries
serie=ts(logret)
class(serie)
#Setar diretório correto
setwd("C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/AirFranceKLM_AF_PA")
#Leitura dos dados
arquivo=read.csv(file="AF_PA_2000a2007.csv")
#Leitura dos dados
arquivo=read.csv(file="AF_PA2000a2007.csv")
#Selecionando apenas o AdjClose -> podemos ignorar os outros
AdjClose=arquivo[c(6)]
length(AdjClose)
head(AdjClose)
tail(AdjClose)
#Passando os dados do data frame para um vetor
AdjClose_vec=as.vector(t(AdjClose))
class(AdjClose_vec)
AdjClose_vec=as.numeric(t(AdjClose))
#Vizualização dos dados originais
plot(AdjClose_vec,main="AdjClose AirFrance-KLM 2000-2020",type="l")
#Para obter o log-return a partir dos preços
#Temos que, o retorno rt = ln(Pt)-ln(Pt-1), ou seja, a diferença do log do preço atual e do log do preço em t-1.
#A função diff retorna justamente AdjCloseBA_vec[t]-AdjCloseBA_vec[t-1]
logret=diff(log(AdjClose_vec),lag=1)
#Para vizualizar o retorno, não o preço
plot(logret,main="Log-return AdjClose AirFrance-KLM 2000-2020",type="l")
#Colocando BA_logret em uma variável do tipo TimeSeries
serie=ts(logret)
#Leitura dos dados -> preços BOEING
arquivo=read.csv(file="AF_PA2010a2020.csv")
#Selecionando apenas o AdjClose -> podemos ignorar os outros
AdjClose=arquivo[c(6)]
length(AdjClose)
head(AdjClose)
tail(AdjClose)
#Passando os dados do data frame para um vetor
AdjClose_vec=as.vector(t(AdjClose))
AdjClose_vec=as.numeric(t(AdjClose))
#Vizualização dos dados originais
plot(AdjClose_vec,main="AdjClose AirFrance-KLM 2000-2020",type="l")
#Vizualização dos dados originais
plot(AdjClose_vec,main="AdjClose AirFrance-KLM 2010-2020",type="l")
library(forecast)
library(tseries)
library(FitARMA)
#Setar diretório correto
setwd("C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA")
#Leitura dos dados -> preços BOEING
arquivo=read.csv(file="AF_PA_2000a2020.csv")
#Selecionando apenas o AdjClose -> podemos ignorar os outros
AdjClose=arquivo[c(6)]
#Convertendo para numeric a fim de limpar NA e NAN
AdjClose_vec=as.numeric(t(AdjClose))
AdjClose_vec=AdjClose_vec[!is.na(AdjClose_vec)]
AdjClose_vec=AdjClose_vec[!is.nan(AdjClose_vec)]
#Vizualização dos dados originais
plot(AdjClose_vec,main="AdjClose AirFrance-KLM 2000-2020",type="l")
#Para obter o log-return a partir dos preços
#Temos que, o retorno rt = ln(Pt)-ln(Pt-1), ou seja, a diferença do log do preço atual e do log do preço em t-1.
#A função diff retorna justamente AdjCloseBA_vec[t]-AdjCloseBA_vec[t-1]
logret=diff(log(AdjClose_vec),lag=1)
logret=logret[!is.na(logret)]
logret=logret[!is.nan(logret)]
#Para vizualizar o retorno, não o preço
plot(logret,main="Log-return AdjClose AirFrance-KLM 2000-2020",type="l")
#Colocando BA_logret em uma variável do tipo TimeSeries
serie=ts(logret)
serie=tsclean(serie)
#Separando a serie em uma parte para ajuste do modelo e outra para comparação com previsão
serie_2fit=serie[c(1:2100)]
serie_2for=serie[c(2101:length(serie))]
serie_ts_2fit=ts(serie_2fit)
serie_ts_2for=ts(serie_2for)
#Plot da série separada para ajuste
plot(serie_ts_2fit,main="Serie Temporal Log-return AdjClose AirFrance-KLM 2000-2020 - to fit",type="l")
#dickey fuller test para estacionaridade
adf.test(serie_ts_2fit, alternative = "stationary")
#PACF e PACF para determinar ordem
Acf(serie_ts_2fit,main='ACF Serie Temporal Log-return AdjClose AirFrance-KLM 2000-2020')#lags relevantes para MA(q) -> 6
Pacf(serie_ts_2fit,main='PACF Serie Temporal Log-return AdjClose AirFrance-KLM 2000-2020')#lags relevantes para AR(p) -> 6
#PACF e PACF para determinar ordem
Acf(serie_ts_2fit,main='ACF Serie Temporal Log-return AdjClose AirFrance-KLM 2000-2020')#lags relevantes para MA(q) -> 6
Pacf(serie_ts_2fit,main='PACF Serie Temporal Log-return AdjClose AirFrance-KLM 2000-2020')#lags relevantes para AR(p) -> 6
library(forecast)
library(tseries)
library(FitARMA)
#Setar diretório correto
setwd("C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA")
#Leitura dos dados -> preços
arquivo=read.csv(file="AF_PA2010a2019.csv")
#Selecionando apenas o AdjClose -> podemos ignorar os outros
AdjClose=arquivo[c(6)]
#Convertendo para numeric a fim de limpar NA e NAN
AdjClose_vec=as.numeric(t(AdjClose))
AdjClose_vec=AdjClose_vec[!is.na(AdjClose_vec)]
AdjClose_vec=AdjClose_vec[!is.nan(AdjClose_vec)]
#Vizualização dos dados originais
plot(AdjClose_vec,main="AdjClose AirFrance-KLM 2010-2019",type="l")
#Para obter o log-return a partir dos preços
#Temos que, o retorno rt = ln(Pt)-ln(Pt-1), ou seja, a diferença do log do preço atual e do log do preço em t-1.
#A função diff retorna justamente AdjCloseserie_vec[t]-AdjCloseBA_vec[t-1]
logret=diff(log(AdjClose_vec),lag=1)
#Para vizualizar o retorno, não o preço
plot(logret,main="Log-return AdjClose AirFrance-KLM 2010-2019",type="l")
#Colocando BA_logret em uma variável do tipo TimeSeries
serie=ts(logret)
serie=tsclean(serie)
#Separando a serie em uma parte para ajuste do modelo e outra para comparação com previsão
serie_2fit=serie[c(1:2100)]
serie_2for=serie[c(2101:length(serie))]
serie_ts_2fit=ts(serie_2fit)
serie_ts_2for=ts(serie_2for)
#Plot da série separada para ajuste
plot(serie_ts_2fit,main="Serie Temporal Log-return AdjClose AirFrance-KLM 2010-2019 - to fit",type="l")
#PACF e PACF para determinar ordem
Acf(serie_ts_2fit,main='ACF Serie Temporal Log-return AdjClose AirFrance-KLM 2010-2019 - to fit')#lags relevantes para MA(q) -> 1 e 11
#PACF e PACF para determinar ordem
Acf(serie_ts_2fit,main='ACF Serie Temporal Log-return AdjClose AirFrance-KLM 2010-2019')#lags relevantes para MA(q) -> 1 e 11
Pacf(serie_ts_2fit,main='PACF Serie Temporal Log-return AdjClose AirFrance-KLM 2010-2019')#lags relevantes para AR(p) -> 1 e 11
library(forecast)
library(tseries)
library(FitARMA)
#Setar diretório correto
setwd("C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/Latam_LTMAQ")
#Leitura dos dados -> preços
arquivo=read.csv(file="LTMAQ2000a2007.csv")
#Selecionando apenas o AdjClose -> podemos ignorar os outros
AdjClose=arquivo[c(6)]
#Convertendo para numeric a fim de limpar NA e NAN
AdjClose_vec=as.numeric(t(AdjClose))
AdjClose_vec=AdjClose_vec[!is.na(AdjClose_vec)]
AdjClose_vec=AdjClose_vec[!is.nan(AdjClose_vec)]
#Vizualização dos dados originais
plot(AdjClose_vec,main="AdjClose Latam 2000-2007",type="l")
