phi(1)   -0.4038243460 0.330933717 -1.22025749
theta(1) -0.4482996531 0.330103142 -1.35805933
theta(2) -0.0412524994 0.029411507 -1.40259727
theta(3)  0.0269805306 0.026935900  1.00165692
theta(4)  0.0449920408 0.028875130  1.55815892
theta(5)  0.0003978026 0.027694843  0.01436378
theta(6)  0.0534804511 0.026192067  2.04185686
theta(7)  0.0773591923 0.025538440  3.02912755
mu        0.0001097575 0.000143235  0.76627611
> print(fit107)
ARMA(1,7)
length of series = 1800 ,  number of parameters = 9
loglikelihood = 6743.55 ,  aic = -13469.1 ,  bic =  -13419.6
>
> coef(fit601)
MLE          sd     Z-ratio
phi(1)    0.4413435881 0.268157248  1.64583874
phi(2)    0.0018595374 0.028300175  0.06570763
phi(3)   -0.0454858539 0.026259895 -1.73214151
phi(4)   -0.0103988338 0.027248973 -0.38162297
phi(5)    0.0314568781 0.026487187  1.18762622
phi(6)   -0.0750997175 0.023785510 -3.15737258
theta(1)  0.3970572661 0.268749831  1.47742332
mu        0.0001097575 0.003000917  0.03657466
> print(fit601)
ARIMA(6,0,1)
length of series = 1800 ,  number of parameters = 8
loglikelihood = 6741.78 ,  aic = -13467.6 ,  bic =  -13423.6
> #Modelos com menores AIC, BIC e maior loglikelihood: (0,0,7); (1,0,0); (1,0,7)
>
> #Vejamos os resíduos, suas médias e acf dos melhores modelos
> res100=residuals.FitARMA(fit100)
> res107=residuals.FitARMA(fit107)
> res007=residuals.FitARMA(fit007)
>
> jpeg(file="C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA/Dados_00a07/Res(1,0,0)_KLM_00a07.jpeg",width = 658, height = 553)
> plot(res100,main="Residuals of ARIMA(1,0,0) AirFrance-KLM 2000-2007",type="l")
> dev.off()
RStudioGD
2
>
> jpeg(file="C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA/Dados_00a07/Res(1,0,7)_KLM_00a20.jpeg",width = 658, height = 553)
> plot(res107,main="Residuals of ARIMA(1,0,7) AirFrance-KLM 2000-2007",type="l")
> dev.off()
RStudioGD
2
>
> jpeg(file="C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA/Dados_00a07/Res(0,0,7)_KLM_00a20.jpeg",width = 658, height = 553)
> plot(res007,main="Residuals of ARIMA(0,0,7) AirFrance-KLM 2000-2007",type="l")
> dev.off()
RStudioGD
2
>
> mean(res100)
[1] -5.200772e-07
> mean(res107)
[1] -4.925343e-06
> mean(res007)
[1] -4.859122e-06
>
> jpeg(file="C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA/Dados_00a07/ACFRes(1,0,0)_KLM_00a20.jpeg",width = 658, height = 553)
> Acf(res100,main="ACF for ARIMA(1,0,0) AirFrance-KLM 2000-2007 residuals")#nao mt bom
> dev.off()
RStudioGD
2
>
> jpeg(file="C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA/Dados_00a07/ACFRes(1,0,7)_KLM_00a20.jpeg",width = 658, height = 553)
> Acf(res107,main="ACF for ARIMA(1,0,7) AirFrance-KLM 2000-2007 residuals")#bom
> dev.off()
RStudioGD
2
>
> jpeg(file="C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA/Dados_00a07/ACFRes(0,0,7)_KLM_00a20.jpeg",width = 658, height = 553)
> Acf(res007,main="ACF for ARIMA(0,0,7) AirFrance-KLM 2000-2007 residuals")#bom
> dev.off()
RStudioGD
2
> #Média próxima de zero, resíduos não correlacionados -> parece
>
>
jpeg(file="C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA/Dados_00a07/ACFRes(0,0,7)_KLM_00a20.jpeg",width = 658, height = 553)
Acf(res007,main="ACF for ARIMA(0,0,7) AirFrance-KLM 2000-2007 residuals")#bom
dev.off()
#Média próxima de zero, resíduos não correlacionados -> parece
#Buraco entre 1200 e 1500
library(forecast)
library(tseries)
library(FitARMA)
#Setar diretório correto
setwd("C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA")
#Leitura dos dados
arquivo=read.csv(file="AF_PA2000a2007.csv")
#Selecionando apenas o AdjClose -> podemos ignorar os outros
AdjClose=arquivo[c(6)]
#Convertendo para numeric a fim de limpar NA e NAN
AdjClose_vec=as.numeric(t(AdjClose))
AdjClose_vec=AdjClose_vec[!is.na(AdjClose_vec)]
AdjClose_vec=AdjClose_vec[!is.nan(AdjClose_vec)]
#Vizualização dos dados originais
jpeg(file="C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA/Dados_00a07/AdjClose_KLM_00a07.jpeg",width = 658, height = 553)
plot(AdjClose_vec,main="AdjClose AirFrance-KLM 2000-2007",type="l")
dev.off()
#Para obter o log-return a partir dos preços -> limpar NaNs
#Temos que, o retorno rt = ln(Pt)-ln(Pt-1), ou seja, a diferença do log do preço atual e do log do preço em t-1.
#A função diff retorna justamente AdjCloseBA_vec[t]-AdjCloseBA_vec[t-1]
logret=diff(log(AdjClose_vec),lag=1)
logret=logret[!is.na(logret)]
logret=logret[!is.nan(logret)]
#Para vizualizar o retorno, não o preço
jpeg(file="C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA/Dados_00a07/LogRet_KLM_00a07.jpeg",width = 658, height = 553)
plot(logret,main="Log-return AdjClose AirFrance-KLM 2000-2007",type="l")
dev.off()
#Colocando BA_logret em uma variável do tipo TimeS eries
serie=ts(logret)
serie=tsclean(serie)
#Separando a serie em uma parte para ajuste do modelo e outra para comparação com previsão
serie_2fit=serie[c(1:1800)]
serie_2for=serie[c(1801:length(serie))]
serie_ts_2fit=ts(serie_2fit)
serie_ts_2for=ts(serie_2for)
#Plot da série separada para ajuste
jpeg(file="C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA/Dados_00a07/Serie_KLM_00a07.jpeg",width = 658, height = 553)
plot(serie_ts_2fit,main="Serie Temporal Log-return AdjClose AirFrance-KLM 2000-2007",type="l")
dev.off()
#dickey fuller test para estacionaridade
adf.test(serie_ts_2fit, alternative = "stationary")
#p-value = 0.01 -> logo há 1% de chance da série apresentar raiz unitária -> a série é estacionária -> d=0
#PACF e PACF para determinar ordem
jpeg(file="C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA/Dados_00a07/ACF_KLM_00a07.jpeg",width = 658, height = 553)
Acf(serie_ts_2fit,main='ACF Serie Temporal Log-return AdjClose AirFrance-KLM 2000-2007')#lags relevantes para MA(q) -> 1, 6 e 7
dev.off()
jpeg(file="C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA/Dados_00a07/PACF_KLM_00a07.jpeg",width = 658, height = 553)
Pacf(serie_ts_2fit,main='PACF Serie Temporal Log-return AdjClose AirFrance-KLM 2000-2007')#lags relevantes para AR(p) -> 1, 6, 7
dev.off()
#Ajustando com base nas ACF e PACF -> classe FitARMA
fit100=FitARMA(serie_ts_2fit, order = c(1,0,0), demean=TRUE, MeanMLEQ = FALSE,pApprox = 30, MaxLag = 30)
fit001=FitARMA(serie_ts_2fit, order = c(0,0,1), demean=TRUE, MeanMLEQ = FALSE,pApprox = 30, MaxLag = 30)
fit600=FitARMA(serie_ts_2fit, order = c(6,0,0), demean=TRUE, MeanMLEQ = FALSE,pApprox = 30, MaxLag = 30)
fit006=FitARMA(serie_ts_2fit, order = c(0,0,6), demean=TRUE, MeanMLEQ = FALSE,pApprox = 30, MaxLag = 30)
fit700=FitARMA(serie_ts_2fit, order = c(7,0,0), demean=TRUE, MeanMLEQ = FALSE,pApprox = 30, MaxLag = 30)
fit007=FitARMA(serie_ts_2fit, order = c(0,0,7), demean=TRUE, MeanMLEQ = FALSE,pApprox = 30, MaxLag = 30)
fit101=FitARMA(serie_ts_2fit, order = c(1,0,1), demean=TRUE, MeanMLEQ = FALSE,pApprox = 30, MaxLag = 30)
fit106=FitARMA(serie_ts_2fit, order = c(1,0,6), demean=TRUE, MeanMLEQ = FALSE,pApprox = 30, MaxLag = 30)
fit107=FitARMA(serie_ts_2fit, order = c(1,0,7), demean=TRUE, MeanMLEQ = FALSE,pApprox = 30, MaxLag = 30)
fit601=FitARMA(serie_ts_2fit, order = c(6,0,1), demean=TRUE, MeanMLEQ = FALSE,pApprox = 30, MaxLag = 30)
#coeficientes dos modelos
coef(fit100)
print(fit100)
coef(fit001)
print(fit001)
coef(fit600)
print(fit600)
coef(fit006)
print(fit006)
coef(fit700)
print(fit700)
coef(fit007)
print(fit007)
coef(fit101)
print(fit101)
coef(fit106)
print(fit106)
coef(fit107)
print(fit107)
coef(fit601)
print(fit601)
#Modelos com menores AIC, BIC e maior loglikelihood: (0,0,7); (1,0,0); (1,0,7)
#Vejamos os resíduos, suas médias e acf dos melhores modelos
res100=residuals.FitARMA(fit100)
res107=residuals.FitARMA(fit107)
res007=residuals.FitARMA(fit007)
jpeg(file="C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA/Dados_00a07/Res(1,0,0)_KLM_00a07.jpeg",width = 658, height = 553)
plot(res100,main="Residuals of ARIMA(1,0,0) AirFrance-KLM 2000-2007",type="l")
dev.off()
jpeg(file="C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA/Dados_00a07/Res(1,0,7)_KLM_00a20.jpeg",width = 658, height = 553)
plot(res107,main="Residuals of ARIMA(1,0,7) AirFrance-KLM 2000-2007",type="l")
dev.off()
jpeg(file="C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA/Dados_00a07/Res(0,0,7)_KLM_00a20.jpeg",width = 658, height = 553)
plot(res007,main="Residuals of ARIMA(0,0,7) AirFrance-KLM 2000-2007",type="l")
dev.off()
mean(res100)
mean(res107)
mean(res007)
jpeg(file="C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA/Dados_00a07/ACFRes(1,0,0)_KLM_00a20.jpeg",width = 658, height = 553)
Acf(res100,main="ACF for ARIMA(1,0,0) AirFrance-KLM 2000-2007 residuals")#nao mt bom
dev.off()
jpeg(file="C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA/Dados_00a07/ACFRes(1,0,7)_KLM_00a20.jpeg",width = 658, height = 553)
Acf(res107,main="ACF for ARIMA(1,0,7) AirFrance-KLM 2000-2007 residuals")#bom
dev.off()
jpeg(file="C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA/Dados_00a07/ACFRes(0,0,7)_KLM_00a20.jpeg",width = 658, height = 553)
Acf(res007,main="ACF for ARIMA(0,0,7) AirFrance-KLM 2000-2007 residuals")#bom
dev.off()
#Média próxima de zero, resíduos não correlacionados -> parece
#Tem um buraco esquisito entre 1000 e 1400 -> limpeios NaNs e NA, além de filtrar com o tsclean
library(forecast)
library(tseries)
library(FitARMA)
#Setar diretório correto
setwd("C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA")
#Leitura dos dados -> preços BOEING
arquivo=read.csv(file="AF_PA_2000a2020.csv")
#Selecionando apenas o AdjClose -> podemos ignorar os outros
AdjClose=arquivo[c(6)]
#Convertendo para numeric a fim de limpar NA e NAN
AdjClose_vec=as.numeric(t(AdjClose))
AdjClose_vec=AdjClose_vec[!is.na(AdjClose_vec)]
AdjClose_vec=AdjClose_vec[!is.nan(AdjClose_vec)]
#Vizualização dos dados originais
jpeg(file="C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA/Dados_00a20/AdjClose_KLM_00a20.jpeg",width = 658, height = 553)
plot(AdjClose_vec,main="AdjClose AirFrance-KLM 2000-2020",type="l")
dev.off()
#Para obter o log-return a partir dos preços
#Temos que, o retorno rt = ln(Pt)-ln(Pt-1), ou seja, a diferença do log do preço atual e do log do preço em t-1.
#A função diff retorna justamente AdjCloseBA_vec[t]-AdjCloseBA_vec[t-1]
logret=diff(log(AdjClose_vec),lag=1)
logret=logret[!is.na(logret)]
logret=logret[!is.nan(logret)]
#Para vizualizar o retorno, não o preço
jpeg(file="C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA/Dados_00a20/LogRet_KLM_00a20.jpeg",width = 658, height = 553)
plot(logret,main="Log-return AdjClose AirFrance-KLM 2000-2020",type="l")
dev.off()
#Colocando BA_logret em uma variável do tipo TimeSeries
serie=ts(logret)
serie=tsclean(serie)
#Separando a serie em uma parte para ajuste do modelo e outra para comparação com previsão
serie_2fit=serie[c(1:4200)]
serie_2for=serie[c(4201:length(serie))]
serie_ts_2fit=ts(serie_2fit)
serie_ts_2for=ts(serie_2for)
#Plot da série separada para ajuste
jpeg(file="C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA/Dados_00a20/Serie_KLM_00a20.jpeg",width = 658, height = 553)
plot(serie_ts_2fit,main="Serie Temporal Log-return AdjClose AirFrance-KLM 2000-2020",type="l")
dev.off()
#dickey fuller test para estacionaridade
adf.test(serie_ts_2fit, alternative = "stationary")
#p-value = 0.01 -> logo há 1% de chance da série apresentar raiz unitária -> a série é estacionária -> d=0
#PACF e PACF para determinar ordem
jpeg(file="C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA/Dados_00a20/ACF_KLM_00a20.jpeg",width = 658, height = 553)
Acf(serie_ts_2fit,main='ACF Serie Temporal Log-return AdjClose AirFrance-KLM 2000-2020')#lags relevantes para MA(q) -> 1, 3, e 6
dev.off()
jpeg(file="C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA/Dados_00a20/PACF_KLM_00a20.jpeg",width = 658, height = 553)
Pacf(serie_ts_2fit,main='PACF Serie Temporal Log-return AdjClose AirFrance-KLM 2000-2020')#lags relevantes para AR(p) -> 1, 3 e 6
dev.off()
#Ajustando com base nas ACF e PACF -> classe FitARMA
fit100=FitARMA(serie_ts_2fit, order = c(1,0,0), demean=TRUE, MeanMLEQ = FALSE,pApprox = 30, MaxLag = 30)
fit001=FitARMA(serie_ts_2fit, order = c(0,0,1), demean=TRUE, MeanMLEQ = FALSE,pApprox = 30, MaxLag = 30)
fit300=FitARMA(serie_ts_2fit, order = c(3,0,0), demean=TRUE, MeanMLEQ = FALSE,pApprox = 30, MaxLag = 30)
fit003=FitARMA(serie_ts_2fit, order = c(0,0,3), demean=TRUE, MeanMLEQ = FALSE,pApprox = 30, MaxLag = 30)
fit600=FitARMA(serie_ts_2fit, order = c(6,0,0), demean=TRUE, MeanMLEQ = FALSE,pApprox = 30, MaxLag = 30)
fit006=FitARMA(serie_ts_2fit, order = c(0,0,6), demean=TRUE, MeanMLEQ = FALSE,pApprox = 30, MaxLag = 30)
fit101=FitARMA(serie_ts_2fit, order = c(1,0,1), demean=TRUE, MeanMLEQ = FALSE,pApprox = 30, MaxLag = 30)
fit103=FitARMA(serie_ts_2fit, order = c(1,0,3), demean=TRUE, MeanMLEQ = FALSE,pApprox = 30, MaxLag = 30)
fit106=FitARMA(serie_ts_2fit, order = c(1,0,6), demean=TRUE, MeanMLEQ = FALSE,pApprox = 30, MaxLag = 30)
fit301=FitARMA(serie_ts_2fit, order = c(3,0,1), demean=TRUE, MeanMLEQ = FALSE,pApprox = 30, MaxLag = 30)
fit303=FitARMA(serie_ts_2fit, order = c(3,0,3), demean=TRUE, MeanMLEQ = FALSE,pApprox = 30, MaxLag = 30)
fit306=FitARMA(serie_ts_2fit, order = c(3,0,6), demean=TRUE, MeanMLEQ = FALSE,pApprox = 30, MaxLag = 30)
fit601=FitARMA(serie_ts_2fit, order = c(6,0,1), demean=TRUE, MeanMLEQ = FALSE,pApprox = 30, MaxLag = 30)
fit603=FitARMA(serie_ts_2fit, order = c(6,0,3), demean=TRUE, MeanMLEQ = FALSE,pApprox = 30, MaxLag = 30)
#coeficientes dos modelos
coef(fit100)
print(fit100)
coef(fit001)
print(fit001)
coef(fit606)
print(fit606)
coef(fit003)
print(fit003)
coef(fit600)
print(fit600)
coef(fit006)
print(fit006)
coef(fit101)
print(fit101)
coef(fit103)
print(fit103)
coef(fit106)
print(fit106)
coef(fit301)
print(fit301)
coef(fit303)
print(fit303)
coef(fit306)
print(fit306)
coef(fit601)
print(fit601)
coef(fit603)
print(fit603)
#Modelos com menores AIC, BIC e maior loglikelihood: (3,0,3); (1,0,1); (6,0,3)
#Vejamos os resíduos, suas médias e acf dos melhores modelos
res303=residuals.FitARMA(fit303)
res101=residuals.FitARMA(fit101)
res603=residuals.FitARMA(fit603)
jpeg(file="C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA/Dados_00a20/Res(3,0,3)_KLM_00a20.jpeg",width = 658, height = 553)
plot(res303,main="Residuals of ARIMA(3,0,3) AirFrance-KLM 2000-2020",type="l")
dev.off()
jpeg(file="C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA/Dados_00a20/Res(1,0,1)_KLM_00a20.jpeg",width = 658, height = 553)
plot(res101,main="Residuals of ARIMA(1,0,1) AirFrance-KLM 2000-2020",type="l")
dev.off()
jpeg(file="C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA/Dados_00a20/Res(6,0,3)_KLM_00a20.jpeg",width = 658, height = 553)
plot(res603,main="Residuals of ARIMA(6,0,3) AirFrance-KLM 2000-2020",type="l")
dev.off()
mean(res303)
mean(res101)
mean(res603)
jpeg(file="C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA/Dados_00a20/ACFRes(3,0,3)_KLM_00a20.jpeg",width = 658, height = 553)
Acf(res303,main="ACF for ARIMA(3,0,3) AirFrance-KLM 2000-2020 residuals'")#bom
dev.off()
jpeg(file="C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA/Dados_00a20/ACFRes(1,0,1)_KLM_00a20.jpeg",width = 658, height = 553)
Acf(res101,main="ACF for ARIMA(1,0,1) AirFrance-KLM 2000-2020 residuals'")#nao mt bom
dev.off()
jpeg(file="C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA/Dados_00a20/ACFRes(6,0,3)_KLM_00a20.jpeg",width = 658, height = 553)
Acf(res603,main="ACF for ARIMA(6,0,3) AirFrance-KLM 2000-2020 residuals'")#bom
dev.off()
#Média próxima de zero, resíduos não correlacionados -> parece
library(forecast)
library(tseries)
library(FitARMA)
#Setar diretório correto
setwd("C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA")
#Leitura dos dados -> preços
arquivo=read.csv(file="AF_PA2010a2019.csv")
#Selecionando apenas o AdjClose -> podemos ignorar os outros
AdjClose=arquivo[c(6)]
#Convertendo para numeric a fim de limpar NA e NAN
AdjClose_vec=as.numeric(t(AdjClose))
AdjClose_vec=AdjClose_vec[!is.na(AdjClose_vec)]
AdjClose_vec=AdjClose_vec[!is.nan(AdjClose_vec)]
#Vizualização dos dados originais
jpeg(file="C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA/Dados_10a19/AdjClose_KLM_10a19.jpeg",width = 658, height = 553)
plot(AdjClose_vec,main="AdjClose AirFrance-KLM 2010-2019",type="l")
dev.off()
#Para obter o log-return a partir dos preços
#Temos que, o retorno rt = ln(Pt)-ln(Pt-1), ou seja, a diferença do log do preço atual e do log do preço em t-1.
#A função diff retorna justamente AdjCloseserie_vec[t]-AdjCloseBA_vec[t-1]
logret=diff(log(AdjClose_vec),lag=1)
#Para vizualizar o retorno, não o preço
jpeg(file="C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA/Dados_10a19/LogRet_KLM_10a19.jpeg",width = 658, height = 553)
plot(logret,main="Log-return AdjClose AirFrance-KLM 2010-2019",type="l")
dev.off()
#Colocando BA_logret em uma variável do tipo TimeSeries
serie=ts(logret)
serie=tsclean(serie)
#Separando a serie em uma parte para ajuste do modelo e outra para comparação com previsão
serie_2fit=serie[c(1:2100)]
serie_2for=serie[c(2101:length(serie))]
serie_ts_2fit=ts(serie_2fit)
serie_ts_2for=ts(serie_2for)
#Plot da série separada para ajuste
jpeg(file="C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA/Dados_10a19/Serie_KLM_10a19.jpeg",width = 658, height = 553)
plot(serie_ts_2fit,main="Serie Temporal Log-return AdjClose AirFrance-KLM 2010-2019",type="l")
dev.off()
#dickey fuller test para estacionaridade
adf.test(serie_ts_2fit, alternative = "stationary")
#p-value = 0.01 -> logo há 1% de chance da série apresentar raiz unitária -> a série é estacionária -> d=0
#PACF e PACF para determinar ordem
jpeg(file="C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA/Dados_10a19/ACF_KLM_10a19.jpeg",width = 658, height = 553)
Acf(serie_ts_2fit,main='ACF Serie Temporal Log-return AdjClose AirFrance-KLM 2010-2019')#lags relevantes para MA(q) -> 1 e 11
dev.off()
jpeg(file="C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA/Dados_10a19/PACF_KLM_10a19.jpeg",width = 658, height = 553)
Pacf(serie_ts_2fit,main='PACF Serie Temporal Log-return AdjClose AirFrance-KLM 2010-2019')#lags relevantes para AR(p) -> 1 e 11
dev.off()
#Ajustando com base nas ACF e PACF -> classe FitARMA
fit100=FitARMA(serie_ts_2fit, order = c(1,0,0), demean=TRUE, MeanMLEQ = FALSE,pApprox = 30, MaxLag = 30)
fit001=FitARMA(serie_ts_2fit, order = c(0,0,1), demean=TRUE, MeanMLEQ = FALSE,pApprox = 30, MaxLag = 30)
fit101=FitARMA(serie_ts_2fit, order = c(1,0,1), demean=TRUE, MeanMLEQ = FALSE,pApprox = 30, MaxLag = 30)
#coeficientes dos modelos
coef(fit100)
print(fit100)
coef(fit001)
print(fit001)
coef(fit101)
print(fit101)
#Modelos com menores AIC, BIC e maior loglikelihood: (1,0,0); (1,0,0); (1,0,1)
#Vejamos os resíduos, suas médias e acf dos melhores modelos
res100=residuals.FitARMA(fit100)
res101=residuals.FitARMA(fit101)
jpeg(file="C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA/Dados_10a19/Res(1,0,0)_KLM_10a19.jpeg",width = 658, height = 553)
plot(res100,main="Residuals of ARIMA(1,0,0) AirFrance-KLM 2010-2019",type="l")
dev.off()
jpeg(file="C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA/Dados_10a19/Res(1,0,1)_KLM_10a19.jpeg",width = 658, height = 553)
plot(res101,main="Residuals of ARIMA(1,0,1) AirFrance-KLM 2010-2019",type="l")
dev.off()
mean(res100)
mean(res101)
jpeg(file="C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA/Dados_10a19/ACFRes(1,0,0)_KLM_10a19.jpeg",width = 658, height = 553)
Acf(res100,main="ACF for ARIMA(1,0,0) AirFrance-KLM 2010-2019 residuals'")#lag 11 grande
dev.off()
jpeg(file="C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA/Dados_10a19/ACFRes(1,0,1)_KLM_10a19.jpeg",width = 658, height = 553)
Acf(res101,main="ACF for ARIMA(1,0,1) AirFrance-KLM 2010-2019 residuals'")#lag 11 grande
dev.off()
#Média próxima de zero, resíduos não correlacionados -> parece
#Tem um buraco esquisito entre 1000 e 1400 -> limpeios NaNs e NA, além de filtrar com o tsclean
library(forecast)
library(tseries)
library(FitARMA)
#Setar diretório correto
setwd("C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA")
#Leitura dos dados -> preços BOEING
arquivo=read.csv(file="AF_PA_2000a2020.csv")
#Selecionando apenas o AdjClose -> podemos ignorar os outros
AdjClose=arquivo[c(6)]
#Convertendo para numeric a fim de limpar NA e NAN
AdjClose_vec=as.numeric(t(AdjClose))
AdjClose_vec=AdjClose_vec[!is.na(AdjClose_vec)]
AdjClose_vec=AdjClose_vec[!is.nan(AdjClose_vec)]
#Vizualização dos dados originais
jpeg(file="C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA/Dados_00a20/AdjClose_KLM_00a20.jpeg",width = 658, height = 553)
plot(AdjClose_vec,main="AdjClose AirFrance-KLM 2000-2020",type="l")
dev.off()
#Para obter o log-return a partir dos preços
#Temos que, o retorno rt = ln(Pt)-ln(Pt-1), ou seja, a diferença do log do preço atual e do log do preço em t-1.
#A função diff retorna justamente AdjCloseBA_vec[t]-AdjCloseBA_vec[t-1]
logret=diff(log(AdjClose_vec),lag=1)
logret=logret[!is.na(logret)]
logret=logret[!is.nan(logret)]
#Para vizualizar o retorno, não o preço
jpeg(file="C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA/Dados_00a20/LogRet_KLM_00a20.jpeg",width = 658, height = 553)
plot(logret,main="Log-return AdjClose AirFrance-KLM 2000-2020",type="l")
dev.off()
#Colocando BA_logret em uma variável do tipo TimeSeries
serie=ts(logret)
serie=tsclean(serie)
#Separando a serie em uma parte para ajuste do modelo e outra para comparação com previsão
serie_2fit=serie[c(1:4200)]
serie_2for=serie[c(4201:length(serie))]
serie_ts_2fit=ts(serie_2fit)
serie_ts_2for=ts(serie_2for)
#Plot da série separada para ajuste
jpeg(file="C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA/Dados_00a20/Serie_KLM_00a20.jpeg",width = 658, height = 553)
plot(serie_ts_2fit,main="Serie Temporal Log-return AdjClose AirFrance-KLM 2000-2020",type="l")
dev.off()
#dickey fuller test para estacionaridade
adf.test(serie_ts_2fit, alternative = "stationary")
#p-value = 0.01 -> logo há 1% de chance da série apresentar raiz unitária -> a série é estacionária -> d=0
#PACF e PACF para determinar ordem
jpeg(file="C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA/Dados_00a20/ACF_KLM_00a20.jpeg",width = 658, height = 553)
Acf(serie_ts_2fit,main='ACF Serie Temporal Log-return AdjClose AirFrance-KLM 2000-2020')#lags relevantes para MA(q) -> 1, 3, e 6
dev.off()
jpeg(file="C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA/Dados_00a20/PACF_KLM_00a20.jpeg",width = 658, height = 553)
Pacf(serie_ts_2fit,main='PACF Serie Temporal Log-return AdjClose AirFrance-KLM 2000-2020')#lags relevantes para AR(p) -> 1, 3 e 6
dev.off()
#Ajustando com base nas ACF e PACF -> classe FitARMA
fit100=FitARMA(serie_ts_2fit, order = c(1,0,0), demean=TRUE, MeanMLEQ = FALSE,pApprox = 30, MaxLag = 30)
fit001=FitARMA(serie_ts_2fit, order = c(0,0,1), demean=TRUE, MeanMLEQ = FALSE,pApprox = 30, MaxLag = 30)
fit300=FitARMA(serie_ts_2fit, order = c(3,0,0), demean=TRUE, MeanMLEQ = FALSE,pApprox = 30, MaxLag = 30)
fit003=FitARMA(serie_ts_2fit, order = c(0,0,3), demean=TRUE, MeanMLEQ = FALSE,pApprox = 30, MaxLag = 30)
fit600=FitARMA(serie_ts_2fit, order = c(6,0,0), demean=TRUE, MeanMLEQ = FALSE,pApprox = 30, MaxLag = 30)
fit006=FitARMA(serie_ts_2fit, order = c(0,0,6), demean=TRUE, MeanMLEQ = FALSE,pApprox = 30, MaxLag = 30)
fit101=FitARMA(serie_ts_2fit, order = c(1,0,1), demean=TRUE, MeanMLEQ = FALSE,pApprox = 30, MaxLag = 30)
fit103=FitARMA(serie_ts_2fit, order = c(1,0,3), demean=TRUE, MeanMLEQ = FALSE,pApprox = 30, MaxLag = 30)
fit106=FitARMA(serie_ts_2fit, order = c(1,0,6), demean=TRUE, MeanMLEQ = FALSE,pApprox = 30, MaxLag = 30)
fit301=FitARMA(serie_ts_2fit, order = c(3,0,1), demean=TRUE, MeanMLEQ = FALSE,pApprox = 30, MaxLag = 30)
fit303=FitARMA(serie_ts_2fit, order = c(3,0,3), demean=TRUE, MeanMLEQ = FALSE,pApprox = 30, MaxLag = 30)
fit306=FitARMA(serie_ts_2fit, order = c(3,0,6), demean=TRUE, MeanMLEQ = FALSE,pApprox = 30, MaxLag = 30)
fit601=FitARMA(serie_ts_2fit, order = c(6,0,1), demean=TRUE, MeanMLEQ = FALSE,pApprox = 30, MaxLag = 30)
fit603=FitARMA(serie_ts_2fit, order = c(6,0,3), demean=TRUE, MeanMLEQ = FALSE,pApprox = 30, MaxLag = 30)
#coeficientes dos modelos
coef(fit100)
print(fit100)
coef(fit001)
print(fit001)
coef(fit606)
print(fit606)
coef(fit003)
print(fit003)
coef(fit600)
print(fit600)
coef(fit006)
print(fit006)
coef(fit101)
print(fit101)
coef(fit103)
print(fit103)
coef(fit106)
print(fit106)
coef(fit301)
print(fit301)
coef(fit303)
print(fit303)
coef(fit306)
print(fit306)
coef(fit601)
print(fit601)
coef(fit603)
print(fit603)
#Modelos com menores AIC, BIC e maior loglikelihood: (3,0,3); (1,0,1); (6,0,3)
#Vejamos os resíduos, suas médias e acf dos melhores modelos
res303=residuals.FitARMA(fit303)
res101=residuals.FitARMA(fit101)
res603=residuals.FitARMA(fit603)
jpeg(file="C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA/Dados_00a20/Res(3,0,3)_KLM_00a20.jpeg",width = 658, height = 553)
plot(res303,main="Residuals of ARIMA(3,0,3) AirFrance-KLM 2000-2020",type="l")
dev.off()
jpeg(file="C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA/Dados_00a20/Res(1,0,1)_KLM_00a20.jpeg",width = 658, height = 553)
plot(res101,main="Residuals of ARIMA(1,0,1) AirFrance-KLM 2000-2020",type="l")
dev.off()
jpeg(file="C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA/Dados_00a20/Res(6,0,3)_KLM_00a20.jpeg",width = 658, height = 553)
plot(res603,main="Residuals of ARIMA(6,0,3) AirFrance-KLM 2000-2020",type="l")
dev.off()
mean(res303)
mean(res101)
mean(res603)
jpeg(file="C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA/Dados_00a20/ACFRes(3,0,3)_KLM_00a20.jpeg",width = 658, height = 553)
Acf(res303,main="ACF for ARIMA(3,0,3) AirFrance-KLM 2000-2020 residuals'")#bom
dev.off()
jpeg(file="C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA/Dados_00a20/ACFRes(1,0,1)_KLM_00a20.jpeg",width = 658, height = 553)
Acf(res101,main="ACF for ARIMA(1,0,1) AirFrance-KLM 2000-2020 residuals'")#nao mt bom
dev.off()
jpeg(file="C:/Users/Matheus/Desktop/PUC/IC/CiasAereas/Modelos/AirFranceKLM_AF_PA/Dados_00a20/ACFRes(6,0,3)_KLM_00a20.jpeg",width = 658, height = 553)
Acf(res603,main="ACF for ARIMA(6,0,3) AirFrance-KLM 2000-2020 residuals'")#bom
dev.off()
#Média próxima de zero, resíduos não correlacionados -> parece
